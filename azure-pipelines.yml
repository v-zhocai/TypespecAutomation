trigger:
  - master
  - test/pipeline

jobs:
  - job: RunElectronUITestsOnLinux
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: "20.18.3"
        displayName: "Install Node.js"

      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '8.0.x'
        displayName: 'Install .NET 8.0 SDK'

      - script: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-0 libxss1 libasound2t64 libnss3 libx11-xcb1 \
            libxcomposite1 libxrandr2 libxcb-dri3-0 libdrm2 libgbm1 \
            libxdamage1 libatk-bridge2.0-0 libcups2 libxkbcommon0 \
            xvfb x11-apps imagemagick
        displayName: "Install Linux Dependencies"

      - script: |
          export DISPLAY=:99
          /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
          echo ">>> Started xvfb"
        displayName: "Start xvfb and Set DISPLAY"

      - script: |
          python --version
          python3 --version
          pip3 --version
          java --version
          mvn --version
          node --version
          npm --version
          dotnet --version
        displayName: "Test Dependencies"

      - script: |
          npm install
          node -e "require('@vscode/test-electron').download().then(p => console.log('##vso[task.setvariable variable=VSCODE_E2E_DOWNLOAD_PATH]' + p))"
          sudo snap install code --classic
        displayName: "Install deps and download VSCode"

      - script: |
          export DISPLAY=:99
          export VSCODE_E2E_DOWNLOAD_PATH=$(VSCODE_E2E_DOWNLOAD_PATH)
          chmod +x screen.sh
          ./screen.sh &
          echo ">>> end screen"
          npm run test
        displayName: "Run Playwright Electron UI Tests"
        env:
          CI: true
          DISPLAY: ":99"
          VSCODE_E2E_DOWNLOAD_PATH: $(VSCODE_E2E_DOWNLOAD_PATH)
          ELECTRON_DISABLE_SANDBOX: "1"
          BUILD_ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)
        continueOnError: true
      - script: |
          ls /home/vsts/work/1/a
        displayName: "List artifacts"

      - task: PublishBuildArtifacts@1
        inputs:
          path: "$(Build.ArtifactStagingDirectory)"
          artifact: "screenshots"
          publishLocation: "Container"
          includePatterns: "*.png"
        displayName: "Publish Screenshots"
